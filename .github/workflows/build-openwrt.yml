#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build OpenWrt

on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_FIRMWARE: false
  UPLOAD_DOCKER: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH lede
        ln -sf /workdir/lede $GITHUB_WORKSPACE/lede
        
    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF lede/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd lede
        $GITHUB_WORKSPACE/$DIY_P1_SH
        
    - name: Update feeds
      run: cd lede && ./scripts/feeds update -a

    - name: Install feeds
      run: cd lede && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files lede/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE lede/.config
        chmod +x $DIY_P2_SH
        cd lede
        $GITHUB_WORKSPACE/$DIY_P2_SH
        
    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: Download package
      id: package
      run: |
        cd lede
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Compile the firmware
      id: compile
      run: |
        cd lede
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
        echo "::set-env name=FILE_DATE::_$(date +"%Y%m%d%H%M")"
    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      id: organize
      run: |
        cd lede/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Docker file - copy Docker file
      run: |
        cp ${{ env.FIRMWARE }}/* n1        

    - name: Image - build
      run: |
        cd n1
        sudo bash build.sh
        
    - name: Upload - push to artifact file 
      uses: actions/upload-artifact@master
      if: env.UPLOAD_DOCKER == 'true' && !cancelled()  
      with:
        name: docker-n1
        path: n1/opt/imgs
      
    - name: Build firmware
      run: |
        cp lede/bin/targets/*/*/*.tar.gz ./openwrt
        sudo ./make -d
        cp lede/.config out/config.seed
        
        cd out
        i=0
        kernels=("4.18.7" "4.19.106" "5.4.43")
        for x in ${kernels[*]}; do
          cd $x
          filename=$(ls)
          filename=${filename%.*}
          gzip *.img
          cd ../
          echo "::set-env name=firmware_$((++i))::$filename"
        done
          
    - name: Upload firmware @ kernel 4.18.7
      uses: actions/upload-artifact@master
      with:
        name: ${{ env.firmware_1 }}
        path: out/4.18.7
      
#    - name: Upload firmware @ kernel 4.19.106
#      uses: actions/upload-artifact@master
#      with:
#        name: ${{ env.firmware_2 }}
#        path: out/4.19.106
      
#    - name: Upload firmware @ kernel 5.4.43
#      uses: actions/upload-artifact@master
#      with:
#        name: ${{ env.firmware_3 }}
#        path: out/5.4.43

    - name: Upload config file
      uses: actions/upload-artifact@master
      with:
        name: config
        path: out/config.seed
