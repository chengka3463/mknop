name: N1-OpenWrt-CI

on:
  schedule:
    - cron: '00 08 * * *'
  repository_dispatch:
    types: run
    
env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: [ubuntu-18.04]
    if: github.event_name == 'schedule' || github.event.action == 'run'

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Install depends
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /usr/lib/jvm /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

      - name: Build firmware
        run: |
          sudo ./make -d

          cd out
          i=0
          kernels=("4.18.7" "4.19.106" "5.4.43")
          for x in ${kernels[*]}; do
            cd $x
            filename=$(ls)
            filename=${filename%.*}
            gzip *.img
            cd ../
            echo "::set-env name=firmware_$((++i))::$filename"
          done

      - name: Upload firmware @ kernel 4.18.7
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.firmware_1 }}
          path: out/4.18.7
      
      - name: Upload firmware @ kernel 4.19.106
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.firmware_2 }}
          path: out/4.19.106
      
      - name: Upload firmware @ kernel 5.4.43
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.firmware_3 }}
          path: out/5.4.43

